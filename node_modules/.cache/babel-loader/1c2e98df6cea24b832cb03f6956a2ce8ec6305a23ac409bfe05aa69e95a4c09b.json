{"ast":null,"code":"var _jsxFileName = \"/Users/ayushkanaujia/Documents/essentialProjects/react_prac/todo-list-App/todolist/src/Components/Particles/ParticlesBg.jsx\";\n// import React from \"react\";\n// import Particles from \"react-tsparticles\";\n// import { loadFull } from \"tsparticles\";\n\n// function ParticlesBg() {\n//   const [particlesConfig, setParticlesConfig] = useState({\n\n//     fullScreen: {\n//       enable: true,\n//       zIndex: -1,\n//     },\n//     particles: {\n//       number: {\n//         value: 10,\n//         density: {\n//           enable: true,\n//           value_area: 800,\n//         },\n//       },\n//       color: {\n//         value: \"#fff\",\n//       },\n//       shape: {\n//         type: \"circle\",\n//         options: {\n//           sides: 10,\n//         },\n//       },\n//       opacity: {\n//         value: 0.8,\n//         random: true,\n//         anim: {\n//           enable: false,\n//           speed: 2,\n//           opacity_min: 0.1,\n//           sync: true,\n//         },\n//       },\n//       size: {\n//         value: 30,\n//         random: true,\n//         anim: {\n//           enable: true,\n//           speed: 10,\n//           size_min: 0.1,\n//           sync: true,\n//         },\n//       },\n//       rotate: {\n//         value: 0,\n//         random: true,\n//         direction: \"clockwise\",\n//         animation: {\n//           enable: true,\n//           speed: 5,\n//           sync: false,\n//         },\n//       },\n//       line_linked: {\n//         enable: false,\n//         // \"enable\": true,\n//         // \"distance\": 600,\n//         // \"color\": \"#ffffff\",\n//         // \"opacity\": 0.4,\n//         // \"width\": 2\n//       },\n//       move: {\n//         enable: true,\n//         speed: 2,\n//         direction: \"none\",\n//         random: false,\n//         straight: false,\n//         out_mode: \"out\",\n//         attract: {\n//           enable: true,\n//           rotateX: 600,\n//           rotateY: 1200,\n//         },\n//       },\n//     },\n//     interactivity: {\n//       events: {\n//         onhover: {\n//           enable: true,\n//           mode: [\"bubble\", \"attract\", \"grab\"], // Attract mode will pull particles towards the cursor on hover\n//         },\n//         onclick: {\n//           enable: true,\n//           mode: [\"repulse\", \"push\"], // Push mode will add new particles on click\n//         },\n//         resize: true,\n//       },\n//       modes: {\n//         grab: {\n//           distance: 400,\n//           line_linked: {\n//             opacity: 1,\n//           },\n//         },\n//         bubble: {\n//           distance: 400,\n//           size: 40,\n//           duration: 2,\n//           opacity: 0.8,\n//           speed: 3,\n//         },\n//         repulse: {\n//           distance: 200,\n//           duration: 0.4,\n//         },\n//         push: {\n//           particles_nb: 1, // Number of particles to add on click\n//         },\n//         remove: {\n//           particles_nb: 2,\n//         },\n//         attract: {\n//           distance: 200, // How close the mouse needs to be to attract particles\n//           duration: 0.7, // Speed of attraction\n//           factor: 5, // How many particles will be moved by the cursor\n//           maxSpeed: 50, // The maximum speed for attracting particles\n//           speed: 1, // The speed of attracting particles\n//         },\n//       },\n//     },\n//     retina_detect: true,\n//     background: {\n//       color: \"#111\",\n//       opacity: \".8\",\n//       image: \"\",\n//       position: \"50% 50%\",\n//       repeat: \"no-repeat\",\n//       size: \"cover\",\n//     },\n\n//     async function loadParticles(main){\n//     await loadFull(main);\n//   }\n// });\n// //   const particlesInit = async (main) => {\n// //     console.log(main);\n\n// //     // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n// //     // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n// //     // starting from v2 you can add only the features you need reducing the bundle size\n// //     await loadFull(main);\n// //   };\n\n// const resetParticles = () => {\n//   setParticlesConfig((oldConfig) => ({\n//     ...oldConfig,\n//     particles: {\n//       ...oldConfig.particles,\n//       number: {\n//         ...oldConfig.particles.number,\n//         value: 0, // Set the number of particles to zero\n//       },\n//     },\n//   }));\n// };\n\n// return (\n//   <>\n//     <Particles\n//       id=\"tsparticles\"\n//       init={loadParticles}\n//       options={{particlesConfig}}\n//     ></Particles>\n//     <button\n//       onClick={resetParticles}\n//       style={{\n//         position: \"absolute\",\n//         bottom: \"20px\", // Adjust as needed\n//         left: \"50%\",\n//         transform: \"translateX(-50%)\",\n//         zIndex: 9999, // Ensure it's above the particles\n//       }}\n//     >\n//       Reset Particles\n//     </button>\n//   </>\n// );\n// }\n// export default ParticlesBg;\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParticlesBg() {\n  const particlesInit = async main => {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      init: particlesInit,\n      options: {\n        \"fullScreen\": {\n          \"enable\": true,\n          \"zIndex\": -1\n        },\n        \"particles\": {\n          \"number\": {\n            \"value\": 10,\n            \"density\": {\n              \"enable\": false,\n              \"value_area\": 800\n            }\n          },\n          \"color\": {\n            \"value\": \"#fff\"\n          },\n          \"shape\": {\n            \"type\": \"star\",\n            \"options\": {\n              \"sides\": 5\n            }\n          },\n          \"opacity\": {\n            \"value\": 0.8,\n            \"random\": false,\n            \"anim\": {\n              \"enable\": false,\n              \"speed\": 1,\n              \"opacity_min\": 0.1,\n              \"sync\": false\n            }\n          },\n          \"size\": {\n            \"value\": 4,\n            \"random\": false,\n            \"anim\": {\n              \"enable\": false,\n              \"speed\": 40,\n              \"size_min\": 0.1,\n              \"sync\": false\n            }\n          },\n          \"rotate\": {\n            \"value\": 0,\n            \"random\": true,\n            \"direction\": \"clockwise\",\n            \"animation\": {\n              \"enable\": true,\n              \"speed\": 5,\n              \"sync\": false\n            }\n          },\n          \"line_linked\": {\n            \"enable\": true,\n            \"distance\": 600,\n            \"color\": \"#ffffff\",\n            \"opacity\": 0.4,\n            \"width\": 2\n          },\n          \"move\": {\n            \"enable\": true,\n            \"speed\": 2,\n            \"direction\": \"none\",\n            \"random\": false,\n            \"straight\": false,\n            \"out_mode\": \"out\",\n            \"attract\": {\n              \"enable\": false,\n              \"rotateX\": 600,\n              \"rotateY\": 1200\n            }\n          }\n        },\n        \"interactivity\": {\n          \"events\": {\n            \"onhover\": {\n              \"enable\": true,\n              \"mode\": [\"grab\"]\n            },\n            \"onclick\": {\n              \"enable\": false,\n              \"mode\": \"bubble\"\n            },\n            \"resize\": true\n          },\n          \"modes\": {\n            \"grab\": {\n              \"distance\": 400,\n              \"line_linked\": {\n                \"opacity\": 1\n              }\n            },\n            \"bubble\": {\n              \"distance\": 400,\n              \"size\": 40,\n              \"duration\": 2,\n              \"opacity\": 8,\n              \"speed\": 3\n            },\n            \"repulse\": {\n              \"distance\": 200\n            },\n            \"push\": {\n              \"particles_nb\": 4\n            },\n            \"remove\": {\n              \"particles_nb\": 2\n            }\n          }\n        },\n        \"retina_detect\": true,\n        \"background\": {\n          \"color\": \"#111\",\n          \"image\": \"\",\n          \"position\": \"50% 50%\",\n          \"repeat\": \"no-repeat\",\n          \"size\": \"cover\"\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_c = ParticlesBg;\nexport default ParticlesBg;\nvar _c;\n$RefreshReg$(_c, \"ParticlesBg\");","map":{"version":3,"names":["Particles","loadFull","jsxDEV","_jsxDEV","ParticlesBg","particlesInit","main","console","log","className","children","id","init","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayushkanaujia/Documents/essentialProjects/react_prac/todo-list-App/todolist/src/Components/Particles/ParticlesBg.jsx"],"sourcesContent":["// import React from \"react\";\n// import Particles from \"react-tsparticles\";\n// import { loadFull } from \"tsparticles\";\n\n// function ParticlesBg() {\n//   const [particlesConfig, setParticlesConfig] = useState({\n\n//     fullScreen: {\n//       enable: true,\n//       zIndex: -1,\n//     },\n//     particles: {\n//       number: {\n//         value: 10,\n//         density: {\n//           enable: true,\n//           value_area: 800,\n//         },\n//       },\n//       color: {\n//         value: \"#fff\",\n//       },\n//       shape: {\n//         type: \"circle\",\n//         options: {\n//           sides: 10,\n//         },\n//       },\n//       opacity: {\n//         value: 0.8,\n//         random: true,\n//         anim: {\n//           enable: false,\n//           speed: 2,\n//           opacity_min: 0.1,\n//           sync: true,\n//         },\n//       },\n//       size: {\n//         value: 30,\n//         random: true,\n//         anim: {\n//           enable: true,\n//           speed: 10,\n//           size_min: 0.1,\n//           sync: true,\n//         },\n//       },\n//       rotate: {\n//         value: 0,\n//         random: true,\n//         direction: \"clockwise\",\n//         animation: {\n//           enable: true,\n//           speed: 5,\n//           sync: false,\n//         },\n//       },\n//       line_linked: {\n//         enable: false,\n//         // \"enable\": true,\n//         // \"distance\": 600,\n//         // \"color\": \"#ffffff\",\n//         // \"opacity\": 0.4,\n//         // \"width\": 2\n//       },\n//       move: {\n//         enable: true,\n//         speed: 2,\n//         direction: \"none\",\n//         random: false,\n//         straight: false,\n//         out_mode: \"out\",\n//         attract: {\n//           enable: true,\n//           rotateX: 600,\n//           rotateY: 1200,\n//         },\n//       },\n//     },\n//     interactivity: {\n//       events: {\n//         onhover: {\n//           enable: true,\n//           mode: [\"bubble\", \"attract\", \"grab\"], // Attract mode will pull particles towards the cursor on hover\n//         },\n//         onclick: {\n//           enable: true,\n//           mode: [\"repulse\", \"push\"], // Push mode will add new particles on click\n//         },\n//         resize: true,\n//       },\n//       modes: {\n//         grab: {\n//           distance: 400,\n//           line_linked: {\n//             opacity: 1,\n//           },\n//         },\n//         bubble: {\n//           distance: 400,\n//           size: 40,\n//           duration: 2,\n//           opacity: 0.8,\n//           speed: 3,\n//         },\n//         repulse: {\n//           distance: 200,\n//           duration: 0.4,\n//         },\n//         push: {\n//           particles_nb: 1, // Number of particles to add on click\n//         },\n//         remove: {\n//           particles_nb: 2,\n//         },\n//         attract: {\n//           distance: 200, // How close the mouse needs to be to attract particles\n//           duration: 0.7, // Speed of attraction\n//           factor: 5, // How many particles will be moved by the cursor\n//           maxSpeed: 50, // The maximum speed for attracting particles\n//           speed: 1, // The speed of attracting particles\n//         },\n//       },\n//     },\n//     retina_detect: true,\n//     background: {\n//       color: \"#111\",\n//       opacity: \".8\",\n//       image: \"\",\n//       position: \"50% 50%\",\n//       repeat: \"no-repeat\",\n//       size: \"cover\",\n//     },\n\n//     async function loadParticles(main){\n//     await loadFull(main);\n//   }\n// });\n// //   const particlesInit = async (main) => {\n// //     console.log(main);\n\n// //     // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n// //     // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n// //     // starting from v2 you can add only the features you need reducing the bundle size\n// //     await loadFull(main);\n// //   };\n\n// const resetParticles = () => {\n//   setParticlesConfig((oldConfig) => ({\n//     ...oldConfig,\n//     particles: {\n//       ...oldConfig.particles,\n//       number: {\n//         ...oldConfig.particles.number,\n//         value: 0, // Set the number of particles to zero\n//       },\n//     },\n//   }));\n// };\n\n// return (\n//   <>\n//     <Particles\n//       id=\"tsparticles\"\n//       init={loadParticles}\n//       options={{particlesConfig}}\n//     ></Particles>\n//     <button\n//       onClick={resetParticles}\n//       style={{\n//         position: \"absolute\",\n//         bottom: \"20px\", // Adjust as needed\n//         left: \"50%\",\n//         transform: \"translateX(-50%)\",\n//         zIndex: 9999, // Ensure it's above the particles\n//       }}\n//     >\n//       Reset Particles\n//     </button>\n//   </>\n// );\n// }\n// export default ParticlesBg;\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\nfunction ParticlesBg() {\n  const particlesInit = async (main) => {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <Particles\n        id=\"tsparticles\"\n        init={particlesInit}\n\n        options={{\n          \"fullScreen\": {\n            \"enable\": true,\n            \"zIndex\": -1\n          },\n          \"particles\": {\n            \"number\": {\n              \"value\": 10,\n              \"density\": {\n                \"enable\": false,\n                \"value_area\": 800\n              }\n            },\n            \"color\": {\n              \"value\": \"#fff\"\n            },\n            \"shape\": {\n              \"type\": \"star\",\n              \"options\": {\n                \"sides\": 5\n              }\n            },\n            \"opacity\": {\n              \"value\": 0.8,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": false,\n                \"speed\": 1,\n                \"opacity_min\": 0.1,\n                \"sync\": false\n              }\n            },\n            \"size\": {\n              \"value\": 4,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": false,\n                \"speed\": 40,\n                \"size_min\": 0.1,\n                \"sync\": false\n              }\n            },\n            \"rotate\": {\n              \"value\": 0,\n              \"random\": true,\n              \"direction\": \"clockwise\",\n              \"animation\": {\n                \"enable\": true,\n                \"speed\": 5,\n                \"sync\": false\n              }\n            },\n            \"line_linked\": {\n              \"enable\": true,\n              \"distance\": 600,\n              \"color\": \"#ffffff\",\n              \"opacity\": 0.4,\n              \"width\": 2\n            },\n            \"move\": {\n              \"enable\": true,\n              \"speed\": 2,\n              \"direction\": \"none\",\n              \"random\": false,\n              \"straight\": false,\n              \"out_mode\": \"out\",\n              \"attract\": {\n                \"enable\": false,\n                \"rotateX\": 600,\n                \"rotateY\": 1200\n              }\n            }\n          },\n          \"interactivity\": {\n            \"events\": {\n              \"onhover\": {\n                \"enable\": true,\n                \"mode\": [\"grab\"]\n              },\n              \"onclick\": {\n                \"enable\": false,\n                \"mode\": \"bubble\"\n              },\n              \"resize\": true\n            },\n            \"modes\": {\n              \"grab\": {\n                \"distance\": 400,\n                \"line_linked\": {\n                  \"opacity\": 1\n                }\n              },\n              \"bubble\": {\n                \"distance\": 400,\n                \"size\": 40,\n                \"duration\": 2,\n                \"opacity\": 8,\n                \"speed\": 3\n              },\n              \"repulse\": {\n                \"distance\": 200\n              },\n              \"push\": {\n                \"particles_nb\": 4\n              },\n              \"remove\": {\n                \"particles_nb\": 2\n              }\n            }\n          },\n          \"retina_detect\": true,\n          \"background\": {\n            \"color\": \"#111\",\n            \"image\": \"\",\n            \"position\": \"50% 50%\",\n            \"repeat\": \"no-repeat\",\n            \"size\": \"cover\"\n          }\n        }}\n      />\n    </div>\n  );\n}\nexport default ParticlesBg;"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}