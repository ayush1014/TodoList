{"ast":null,"code":"var _jsxFileName = \"/Users/ayushkanaujia/Documents/essentialProjects/react_prac/todo-list-App/todolist/src/Components/Particles/ParticlesBg.jsx\";\n// import React from \"react\";\n// import Particles from \"react-tsparticles\";\n// import { loadFull } from \"tsparticles\";\n\n// function ParticlesBg() {\n//   const [particlesConfig, setParticlesConfig] = useState({\n\n//     fullScreen: {\n//       enable: true,\n//       zIndex: -1,\n//     },\n//     particles: {\n//       number: {\n//         value: 10,\n//         density: {\n//           enable: true,\n//           value_area: 800,\n//         },\n//       },\n//       color: {\n//         value: \"#fff\",\n//       },\n//       shape: {\n//         type: \"circle\",\n//         options: {\n//           sides: 10,\n//         },\n//       },\n//       opacity: {\n//         value: 0.8,\n//         random: true,\n//         anim: {\n//           enable: false,\n//           speed: 2,\n//           opacity_min: 0.1,\n//           sync: true,\n//         },\n//       },\n//       size: {\n//         value: 30,\n//         random: true,\n//         anim: {\n//           enable: true,\n//           speed: 10,\n//           size_min: 0.1,\n//           sync: true,\n//         },\n//       },\n//       rotate: {\n//         value: 0,\n//         random: true,\n//         direction: \"clockwise\",\n//         animation: {\n//           enable: true,\n//           speed: 5,\n//           sync: false,\n//         },\n//       },\n//       line_linked: {\n//         enable: false,\n//         // \"enable\": true,\n//         // \"distance\": 600,\n//         // \"color\": \"#ffffff\",\n//         // \"opacity\": 0.4,\n//         // \"width\": 2\n//       },\n//       move: {\n//         enable: true,\n//         speed: 2,\n//         direction: \"none\",\n//         random: false,\n//         straight: false,\n//         out_mode: \"out\",\n//         attract: {\n//           enable: true,\n//           rotateX: 600,\n//           rotateY: 1200,\n//         },\n//       },\n//     },\n//     interactivity: {\n//       events: {\n//         onhover: {\n//           enable: true,\n//           mode: [\"bubble\", \"attract\", \"grab\"], // Attract mode will pull particles towards the cursor on hover\n//         },\n//         onclick: {\n//           enable: true,\n//           mode: [\"repulse\", \"push\"], // Push mode will add new particles on click\n//         },\n//         resize: true,\n//       },\n//       modes: {\n//         grab: {\n//           distance: 400,\n//           line_linked: {\n//             opacity: 1,\n//           },\n//         },\n//         bubble: {\n//           distance: 400,\n//           size: 40,\n//           duration: 2,\n//           opacity: 0.8,\n//           speed: 3,\n//         },\n//         repulse: {\n//           distance: 200,\n//           duration: 0.4,\n//         },\n//         push: {\n//           particles_nb: 1, // Number of particles to add on click\n//         },\n//         remove: {\n//           particles_nb: 2,\n//         },\n//         attract: {\n//           distance: 200, // How close the mouse needs to be to attract particles\n//           duration: 0.7, // Speed of attraction\n//           factor: 5, // How many particles will be moved by the cursor\n//           maxSpeed: 50, // The maximum speed for attracting particles\n//           speed: 1, // The speed of attracting particles\n//         },\n//       },\n//     },\n//     retina_detect: true,\n//     background: {\n//       color: \"#111\",\n//       opacity: \".8\",\n//       image: \"\",\n//       position: \"50% 50%\",\n//       repeat: \"no-repeat\",\n//       size: \"cover\",\n//     },\n\n//     async function loadParticles(main){\n//     await loadFull(main);\n//   }\n// });\n// //   const particlesInit = async (main) => {\n// //     console.log(main);\n\n// //     // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n// //     // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n// //     // starting from v2 you can add only the features you need reducing the bundle size\n// //     await loadFull(main);\n// //   };\n\n// const resetParticles = () => {\n//   setParticlesConfig((oldConfig) => ({\n//     ...oldConfig,\n//     particles: {\n//       ...oldConfig.particles,\n//       number: {\n//         ...oldConfig.particles.number,\n//         value: 0, // Set the number of particles to zero\n//       },\n//     },\n//   }));\n// };\n\n// return (\n//   <>\n//     <Particles\n//       id=\"tsparticles\"\n//       init={loadParticles}\n//       options={{particlesConfig}}\n//     ></Particles>\n//     <button\n//       onClick={resetParticles}\n//       style={{\n//         position: \"absolute\",\n//         bottom: \"20px\", // Adjust as needed\n//         left: \"50%\",\n//         transform: \"translateX(-50%)\",\n//         zIndex: 9999, // Ensure it's above the particles\n//       }}\n//     >\n//       Reset Particles\n//     </button>\n//   </>\n// );\n// }\n// export default ParticlesBg;\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ParticlesBg() {\n  const particlesInit = async main => {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      init: loadParticles,\n      options: particlesConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetParticles,\n      style: {\n        position: \"absolute\",\n        bottom: \"20px\",\n        // Adjust as needed\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        zIndex: 9999 // Ensure it's above the particles\n      },\n      children: \"Reset Particles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = ParticlesBg;\nexport default ParticlesBg;\n\n// fullScreen: {\n//   enable: true,\n//   zIndex: -1,\n// },\n// particles: {\n//   number: {\n//     value: 10,\n//     density: {\n//       enable: true,\n//       value_area: 800,\n//     },\n//   },\n//   color: {\n//     value: \"#fff\",\n//   },\n//   shape: {\n//     type: \"circle\",\n//     options: {\n//       sides: 10,\n//     },\n//   },\n//   opacity: {\n//     value: 0.8,\n//     random: true,\n//     anim: {\n//       enable: false,\n//       speed: 2,\n//       opacity_min: 0.1,\n//       sync: true,\n//     },\n//   },\n//   size: {\n//     value: 30,\n//     random: true,\n//     anim: {\n//       enable: true,\n//       speed: 10,\n//       size_min: 0.1,\n//       sync: true,\n//     },\n//   },\n//   rotate: {\n//     value: 0,\n//     random: true,\n//     direction: \"clockwise\",\n//     animation: {\n//       enable: true,\n//       speed: 5,\n//       sync: false,\n//     },\n//   },\n//   line_linked: {\n//     enable: false,\n//     // \"enable\": true,\n//     // \"distance\": 600,\n//     // \"color\": \"#ffffff\",\n//     // \"opacity\": 0.4,\n//     // \"width\": 2\n//   },\n//   move: {\n//     enable: true,\n//     speed: 2,\n//     direction: \"none\",\n//     random: false,\n//     straight: false,\n//     out_mode: \"out\",\n//     attract: {\n//       enable: true,\n//       rotateX: 600,\n//       rotateY: 1200,\n//     },\n//   },\n// },\n// interactivity: {\n//   events: {\n//     onhover: {\n//       enable: true,\n//       mode: [\"bubble\", \"attract\", \"grab\"], // Attract mode will pull particles towards the cursor on hover\n//     },\n//     onclick: {\n//       enable: true,\n//       mode: [\"repulse\", \"push\"], // Push mode will add new particles on click\n//     },\n//     resize: true,\n//   },\n//   modes: {\n//     grab: {\n//       distance: 400,\n//       line_linked: {\n//         opacity: 1,\n//       },\n//     },\n//     bubble: {\n//       distance: 400,\n//       size: 40,\n//       duration: 2,\n//       opacity: 0.8,\n//       speed: 3,\n//     },\n//     repulse: {\n//       distance: 200,\n//       duration: 0.4,\n//     },\n//     push: {\n//       particles_nb: 1, // Number of particles to add on click\n//     },\n//     remove: {\n//       particles_nb: 2,\n//     },\n//     attract: {\n//       distance: 200, // How close the mouse needs to be to attract particles\n//       duration: 0.7, // Speed of attraction\n//       factor: 5, // How many particles will be moved by the cursor\n//       maxSpeed: 50, // The maximum speed for attracting particles\n//       speed: 1, // The speed of attracting particles\n//     },\n//   },\n// },\n// retina_detect: true,\n// background: {\n//   color: \"#111\",\n//   opacity: \".8\",\n//   image: \"\",\n//   position: \"50% 50%\",\n//   repeat: \"no-repeat\",\n//   size: \"cover\",\n// }\nvar _c;\n$RefreshReg$(_c, \"ParticlesBg\");","map":{"version":3,"names":["Particles","loadFull","jsxDEV","_jsxDEV","Fragment","_Fragment","ParticlesBg","particlesInit","main","console","log","children","id","init","loadParticles","options","particlesConfig","fileName","_jsxFileName","lineNumber","columnNumber","onClick","resetParticles","style","position","bottom","left","transform","zIndex","_c","$RefreshReg$"],"sources":["/Users/ayushkanaujia/Documents/essentialProjects/react_prac/todo-list-App/todolist/src/Components/Particles/ParticlesBg.jsx"],"sourcesContent":["// import React from \"react\";\n// import Particles from \"react-tsparticles\";\n// import { loadFull } from \"tsparticles\";\n\n// function ParticlesBg() {\n//   const [particlesConfig, setParticlesConfig] = useState({\n\n//     fullScreen: {\n//       enable: true,\n//       zIndex: -1,\n//     },\n//     particles: {\n//       number: {\n//         value: 10,\n//         density: {\n//           enable: true,\n//           value_area: 800,\n//         },\n//       },\n//       color: {\n//         value: \"#fff\",\n//       },\n//       shape: {\n//         type: \"circle\",\n//         options: {\n//           sides: 10,\n//         },\n//       },\n//       opacity: {\n//         value: 0.8,\n//         random: true,\n//         anim: {\n//           enable: false,\n//           speed: 2,\n//           opacity_min: 0.1,\n//           sync: true,\n//         },\n//       },\n//       size: {\n//         value: 30,\n//         random: true,\n//         anim: {\n//           enable: true,\n//           speed: 10,\n//           size_min: 0.1,\n//           sync: true,\n//         },\n//       },\n//       rotate: {\n//         value: 0,\n//         random: true,\n//         direction: \"clockwise\",\n//         animation: {\n//           enable: true,\n//           speed: 5,\n//           sync: false,\n//         },\n//       },\n//       line_linked: {\n//         enable: false,\n//         // \"enable\": true,\n//         // \"distance\": 600,\n//         // \"color\": \"#ffffff\",\n//         // \"opacity\": 0.4,\n//         // \"width\": 2\n//       },\n//       move: {\n//         enable: true,\n//         speed: 2,\n//         direction: \"none\",\n//         random: false,\n//         straight: false,\n//         out_mode: \"out\",\n//         attract: {\n//           enable: true,\n//           rotateX: 600,\n//           rotateY: 1200,\n//         },\n//       },\n//     },\n//     interactivity: {\n//       events: {\n//         onhover: {\n//           enable: true,\n//           mode: [\"bubble\", \"attract\", \"grab\"], // Attract mode will pull particles towards the cursor on hover\n//         },\n//         onclick: {\n//           enable: true,\n//           mode: [\"repulse\", \"push\"], // Push mode will add new particles on click\n//         },\n//         resize: true,\n//       },\n//       modes: {\n//         grab: {\n//           distance: 400,\n//           line_linked: {\n//             opacity: 1,\n//           },\n//         },\n//         bubble: {\n//           distance: 400,\n//           size: 40,\n//           duration: 2,\n//           opacity: 0.8,\n//           speed: 3,\n//         },\n//         repulse: {\n//           distance: 200,\n//           duration: 0.4,\n//         },\n//         push: {\n//           particles_nb: 1, // Number of particles to add on click\n//         },\n//         remove: {\n//           particles_nb: 2,\n//         },\n//         attract: {\n//           distance: 200, // How close the mouse needs to be to attract particles\n//           duration: 0.7, // Speed of attraction\n//           factor: 5, // How many particles will be moved by the cursor\n//           maxSpeed: 50, // The maximum speed for attracting particles\n//           speed: 1, // The speed of attracting particles\n//         },\n//       },\n//     },\n//     retina_detect: true,\n//     background: {\n//       color: \"#111\",\n//       opacity: \".8\",\n//       image: \"\",\n//       position: \"50% 50%\",\n//       repeat: \"no-repeat\",\n//       size: \"cover\",\n//     },\n\n//     async function loadParticles(main){\n//     await loadFull(main);\n//   }\n// });\n// //   const particlesInit = async (main) => {\n// //     console.log(main);\n\n// //     // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n// //     // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n// //     // starting from v2 you can add only the features you need reducing the bundle size\n// //     await loadFull(main);\n// //   };\n\n// const resetParticles = () => {\n//   setParticlesConfig((oldConfig) => ({\n//     ...oldConfig,\n//     particles: {\n//       ...oldConfig.particles,\n//       number: {\n//         ...oldConfig.particles.number,\n//         value: 0, // Set the number of particles to zero\n//       },\n//     },\n//   }));\n// };\n\n// return (\n//   <>\n//     <Particles\n//       id=\"tsparticles\"\n//       init={loadParticles}\n//       options={{particlesConfig}}\n//     ></Particles>\n//     <button\n//       onClick={resetParticles}\n//       style={{\n//         position: \"absolute\",\n//         bottom: \"20px\", // Adjust as needed\n//         left: \"50%\",\n//         transform: \"translateX(-50%)\",\n//         zIndex: 9999, // Ensure it's above the particles\n//       }}\n//     >\n//       Reset Particles\n//     </button>\n//   </>\n// );\n// }\n// export default ParticlesBg;\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\nfunction ParticlesBg() {\n  const particlesInit = async (main) => {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  };\n\n  return (\n\n    <>\n      <Particles\n        id=\"tsparticles\"\n        init={loadParticles}\n        options={particlesConfig}\n      />\n      <button\n        onClick={resetParticles}\n        style={{\n          position: \"absolute\",\n          bottom: \"20px\", // Adjust as needed\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          zIndex: 9999, // Ensure it's above the particles\n        }}\n      >\n        Reset Particles\n      </button>\n    </>\n\n\n  );\n}\nexport default ParticlesBg;\n\n\n\n\n\n// fullScreen: {\n//   enable: true,\n//   zIndex: -1,\n// },\n// particles: {\n//   number: {\n//     value: 10,\n//     density: {\n//       enable: true,\n//       value_area: 800,\n//     },\n//   },\n//   color: {\n//     value: \"#fff\",\n//   },\n//   shape: {\n//     type: \"circle\",\n//     options: {\n//       sides: 10,\n//     },\n//   },\n//   opacity: {\n//     value: 0.8,\n//     random: true,\n//     anim: {\n//       enable: false,\n//       speed: 2,\n//       opacity_min: 0.1,\n//       sync: true,\n//     },\n//   },\n//   size: {\n//     value: 30,\n//     random: true,\n//     anim: {\n//       enable: true,\n//       speed: 10,\n//       size_min: 0.1,\n//       sync: true,\n//     },\n//   },\n//   rotate: {\n//     value: 0,\n//     random: true,\n//     direction: \"clockwise\",\n//     animation: {\n//       enable: true,\n//       speed: 5,\n//       sync: false,\n//     },\n//   },\n//   line_linked: {\n//     enable: false,\n//     // \"enable\": true,\n//     // \"distance\": 600,\n//     // \"color\": \"#ffffff\",\n//     // \"opacity\": 0.4,\n//     // \"width\": 2\n//   },\n//   move: {\n//     enable: true,\n//     speed: 2,\n//     direction: \"none\",\n//     random: false,\n//     straight: false,\n//     out_mode: \"out\",\n//     attract: {\n//       enable: true,\n//       rotateX: 600,\n//       rotateY: 1200,\n//     },\n//   },\n// },\n// interactivity: {\n//   events: {\n//     onhover: {\n//       enable: true,\n//       mode: [\"bubble\", \"attract\", \"grab\"], // Attract mode will pull particles towards the cursor on hover\n//     },\n//     onclick: {\n//       enable: true,\n//       mode: [\"repulse\", \"push\"], // Push mode will add new particles on click\n//     },\n//     resize: true,\n//   },\n//   modes: {\n//     grab: {\n//       distance: 400,\n//       line_linked: {\n//         opacity: 1,\n//       },\n//     },\n//     bubble: {\n//       distance: 400,\n//       size: 40,\n//       duration: 2,\n//       opacity: 0.8,\n//       speed: 3,\n//     },\n//     repulse: {\n//       distance: 200,\n//       duration: 0.4,\n//     },\n//     push: {\n//       particles_nb: 1, // Number of particles to add on click\n//     },\n//     remove: {\n//       particles_nb: 2,\n//     },\n//     attract: {\n//       distance: 200, // How close the mouse needs to be to attract particles\n//       duration: 0.7, // Speed of attraction\n//       factor: 5, // How many particles will be moved by the cursor\n//       maxSpeed: 50, // The maximum speed for attracting particles\n//       speed: 1, // The speed of attracting particles\n//     },\n//   },\n// },\n// retina_detect: true,\n// background: {\n//   color: \"#111\",\n//   opacity: \".8\",\n//   image: \"\",\n//   position: \"50% 50%\",\n//   repeat: \"no-repeat\",\n//   size: \"cover\",\n// }"],"mappingsmBAAmB;AACzC,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAMC,aAAa,GAAG,MAAOC,IAAI,IAAK;IACpCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;;IAEjB;IACA;IACA;IACA,MAAMP,QAAQ,CAACO,IAAI,CAAC;EACtB,CAAC;EAED,oBAEEL,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA,CAACH,SAAS;MACRY,EAAE,EAAC,aAAa;MAChBC,IAAI,EAAEC,aAAc;MACpBC,OAAO,EAAEC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFjB,OAAA;MACEkB,OAAO,EAAEC,cAAe;MACxBC,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,MAAM,EAAE,MAAM;QAAE;QAChBC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,kBAAkB;QAC7BC,MAAM,EAAE,IAAI,CAAE;MAChB,CAAE;MAAAjB,QAAA,EACH;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAIP;AAACS,EAAA,GAlCQvB,WAAW;AAmCpB,eAAeuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}